
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/plot_fakeplanting.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_plot_fakeplanting.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_plot_fakeplanting.py:


===================
Fake Source Planting
===================

Demonstration of planting fake PSFs in diff images to mimic
strongly-lensed supernovae.

.. GENERATED FROM PYTHON SOURCE LINES 9-15

.. code-block:: default


    import os
    import numpy as np
    import diffimageml
    from matplotlib import pyplot as plt





.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Created TAP+ (v1.2.1) - Connection:
            Host: gea.esac.esa.int
            Use HTTPS: True
            Port: 443
            SSL Port: 443
    Created TAP+ (v1.2.1) - Connection:
            Host: geadata.esac.esa.int
            Use HTTPS: True
            Port: 443
            SSL Port: 443




.. GENERATED FROM PYTHON SOURCE LINES 18-28

Fake Source Planting Overview
-------------------------------

From a trio of images (template, search, diff), we

#. find galaxies in the template image

#. build a PSF model from the search image

#. plant Fake PSFs in the diff image near the galaxy locations

.. GENERATED FROM PYTHON SOURCE LINES 31-35

Setup 1: Get the Data
---------------------
Load in a trio of fits images from the example data dir
Pull them together into a FakePlanter triplet

.. GENERATED FROM PYTHON SOURCE LINES 35-52

.. code-block:: default


    example_data_dict = diffimageml.get_example_data()
    assert(os.path.isfile(example_data_dict['diffim1']))
    assert(os.path.isfile(example_data_dict['searchim1']))
    assert(os.path.isfile(example_data_dict['templateim1']))

    fakeplantertrio = diffimageml.FakePlanter(
        example_data_dict['diffim1'],
        searchim_fitsfilename=example_data_dict['searchim1'],
        templateim_fitsfilename=example_data_dict['templateim1'])

    print("FakePlanter Trio constructed.")
    assert(fakeplantertrio.searchim.has_fakes == False)
    assert(fakeplantertrio.diffim.has_fakes == False)
    print("  (No fakes yet)")






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /usr/local/anaconda3/envs/astroconda/lib/python3.7/site-packages/astropy/wcs/wcs.py:709: FITSFixedWarning: 'obsfix' made the change 'Set OBSGEO-L to   149.070647 from OBSGEO-[XYZ].
    Set OBSGEO-B to   -31.272933 from OBSGEO-[XYZ].
    Set OBSGEO-H to     1164.993 from OBSGEO-[XYZ]'.
      FITSFixedWarning)
    FakePlanter Trio constructed.
      (No fakes yet)




.. GENERATED FROM PYTHON SOURCE LINES 53-60

Setup 2: Make the PSF Model
---------------------

Measure the zero point and build the ePSF model from Gaia stars
See the other example for details and plots.
In practice, this code will load an existing ePSF model from the
example data directory.

.. GENERATED FROM PYTHON SOURCE LINES 60-69

.. code-block:: default


    fakeplantertrio.searchim.fetch_gaia_sources(overwrite=False)
    fakeplantertrio.searchim.do_stellar_photometry(
        fakeplantertrio.searchim.gaia_source_table)
    fakeplantertrio.searchim.measure_zeropoint(showplot=False)
    fakeplantertrio.searchim.build_epsf_model(
        verbose=False, save_suffix='TestEPSFModel')






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    Gaia catalog /Users/rodney/Dropbox/src/diffimageml/diffimageml/test_data/sky_image_1_GaiaCat.ecsv exists. 
    Reading without fetching.
    /Users/rodney/Dropbox/src/diffimageml/diffimageml/fakeplanting.py:676: RuntimeWarning: invalid value encountered in log10
      phot['mag'] = -2.5 * np.log10( phot['aper_sum_bkgsub'] )
    /Users/rodney/Dropbox/src/diffimageml/diffimageml/fakeplanting.py:752: RuntimeWarning: divide by zero encountered in true_divide
      (np.abs(star_flux/star_flux_err)>20))
    /usr/local/anaconda3/envs/astroconda/lib/python3.7/site-packages/numpy/core/fromnumeric.py:748: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.
      a.partition(kth, axis=axis, kind=kind, order=order)
    /usr/local/anaconda3/envs/astroconda/lib/python3.7/site-packages/numpy/core/fromnumeric.py:748: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.
      a.partition(kth, axis=axis, kind=kind, order=order)
    /usr/local/anaconda3/envs/astroconda/lib/python3.7/site-packages/numpy/core/fromnumeric.py:748: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.
      a.partition(kth, axis=axis, kind=kind, order=order)
    /usr/local/anaconda3/envs/astroconda/lib/python3.7/site-packages/numpy/core/fromnumeric.py:748: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.
      a.partition(kth, axis=axis, kind=kind, order=order)
    /usr/local/anaconda3/envs/astroconda/lib/python3.7/site-packages/numpy/core/fromnumeric.py:748: UserWarning: Warning: 'partition' will ignore the 'mask' of the MaskedArray.
      a.partition(kth, axis=axis, kind=kind, order=order)




.. GENERATED FROM PYTHON SOURCE LINES 70-74

Plant Fakes
--------

Here we plant just 10 very bright fakes

.. GENERATED FROM PYTHON SOURCE LINES 74-105

.. code-block:: default


    # detect sources in the template image, identify likely galaxies
    fakeplantertrio.templateim.detect_sources()
    hostgaltable = fakeplantertrio.templateim.detect_host_galaxies()


    # Make 10 locations for random fakes (each relative to a galaxy center point)
    Nfakes = 10
    phi = np.random.uniform(0, 360, Nfakes)
    d = np.random.uniform(0, 5, Nfakes)
    fluxes = np.random.uniform(10**2, 10**4, Nfakes)

    # fix the positions of the fakes in x,y coordinates on the diff image
    # This returns three tables: one each for the diffim, searchim, and templateim
    fake_positions_and_fluxes = fakeplantertrio.set_fake_positions_at_galaxies(
        phi, d, fluxes)

    # Grab the existing ePSF model from the search image
    epsfmodel = fakeplantertrio.searchim.epsf

    # Plant the fakes
    fakeplantertrio.plant_fakes_triplet(
        fake_positions_and_fluxes, psfmodel=epsfmodel,
        writetodisk=False, save_suffix="planted.fits")

    print("Fake planting is done.")
    assert(fakeplantertrio.diffim.has_fakes==True)
    assert(fakeplantertrio.searchim.has_fakes==True)
    print(" has_fakes is True, True!")






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    /usr/local/anaconda3/envs/astroconda/lib/python3.7/site-packages/astropy/wcs/wcs.py:709: FITSFixedWarning: 'obsfix' made the change 'Set OBSGEO-L to   149.070647 from OBSGEO-[XYZ].
    Set OBSGEO-B to   -31.272933 from OBSGEO-[XYZ].
    Set OBSGEO-H to     1164.993 from OBSGEO-[XYZ]'.
      FITSFixedWarning)
    /usr/local/anaconda3/envs/astroconda/lib/python3.7/site-packages/astropy/wcs/wcs.py:709: FITSFixedWarning: 'obsfix' made the change 'Set OBSGEO-L to   149.070647 from OBSGEO-[XYZ].
    Set OBSGEO-B to   -31.272933 from OBSGEO-[XYZ].
    Set OBSGEO-H to     1164.993 from OBSGEO-[XYZ]'.
      FITSFixedWarning)
    /usr/local/anaconda3/envs/astroconda/lib/python3.7/site-packages/astropy/wcs/wcs.py:709: FITSFixedWarning: 'obsfix' made the change 'Set OBSGEO-L to   149.070647 from OBSGEO-[XYZ].
    Set OBSGEO-B to   -31.272933 from OBSGEO-[XYZ].
    Set OBSGEO-H to     1164.993 from OBSGEO-[XYZ]'.
      FITSFixedWarning)
    Fake planting is done.
     has_fakes is True, True!




.. GENERATED FROM PYTHON SOURCE LINES 106-111

Display Fakes
--------

Show a few examples of fakes from the diff image, using a few
random indices from the list of fakes

.. GENERATED FROM PYTHON SOURCE LINES 111-119

.. code-block:: default


    fakeIDs, fake_positions =  fakeplantertrio.get_fake_locations()

    rng = np.random.default_rng()
    fakeids_to_show = rng.choice(fakeIDs, 3)
    print(fakeids_to_show)






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    [8 1 0]




.. GENERATED FROM PYTHON SOURCE LINES 120-123

Display the fakes in the diff image
--------


.. GENERATED FROM PYTHON SOURCE LINES 123-129

.. code-block:: default


    fakeplantertrio.plot_fakes(
        fake_indices=fakeids_to_show)






.. image:: /examples/images/sphx_glr_plot_fakeplanting_001.png
    :alt: plot fakeplanting
    :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 130-134

TODO:  Make a trio of postage stamps for each fake
--------

Show the trio of fakes for each


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  51.465 seconds)


.. _sphx_glr_download_examples_plot_fakeplanting.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: plot_fakeplanting.py <plot_fakeplanting.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: plot_fakeplanting.ipynb <plot_fakeplanting.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
